# ASP.NET Core (.NET Framework)
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '$basicAuth= ("{0}:{1}"-f $PATusername,$PATpassword)
      
      $basicAuth=[System.Text.Encoding]::UTF8.GetBytes($basicAuth)
      
      $basicAuth=[System.Convert]::ToBase64String($basicAuth)
      
      $headers= @{Authorization=("Basic {0}"-f $basicAuth)}
      
      $filePath="$(System.DefaultWorkingDirectory)"
      
      $fileName=$filePath+"\tasklog.log"
      
      $url= $(projectURL) + $(ProjectName) + "/_apis/build/builds/" + $(Build.BuildId) + "/logs?api-version=2.0"
      
       
      
      Write-Host "URL: $url"
      
       
      
      $responseBuild = Invoke-RestMethod -Uri $url -headers $headers -Method Get | select value
      
       
      
      $logid = $responseBuild.value.Count - 1;
      
       
      
      $logurl = $(projectURL) + $(ProjectName) + "/_apis/build/builds/" + $(Build.BuildId) + "/logs/" + $logid;
      
       
      
      $getlog = Invoke-RestMethod -Uri $logurl -headers $headers -Method Get
      
       
      
      Out-File -FilePath $filename -InputObject $getlog -Encoding ascii'
- task: Docker@2
  inputs:
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
